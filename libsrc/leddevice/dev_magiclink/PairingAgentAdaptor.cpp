/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a PairingAgentAdaptor -c PairingAgentAdaptor agent.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "PairingAgentAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QString>
#include <QtCore/QVariant>

namespace MagicLink
{
/*
 * Implementation of adaptor class PairingAgentAdaptor
 */

PairingAgentAdaptor::PairingAgentAdaptor(QObject* parent)
	: QDBusAbstractAdaptor(parent)
{
	// constructor
	setAutoRelaySignals(true);
}

PairingAgentAdaptor::~PairingAgentAdaptor() = default;

void PairingAgentAdaptor::AuthorizeService(const QDBusObjectPath& device, const QString& uuid)
{
	// handle method call org.bluez.Agent1.AuthorizeService
	QMetaObject::invokeMethod(parent(), "AuthorizeService", Q_ARG(QDBusObjectPath, device), Q_ARG(QString, uuid));
}

void PairingAgentAdaptor::Cancel()
{
	// handle method call org.bluez.Agent1.Cancel
	QMetaObject::invokeMethod(parent(), "Cancel");
}

void PairingAgentAdaptor::DisplayPasskey(const QDBusObjectPath& device, uint passkey, ushort entered)
{
	// handle method call org.bluez.Agent1.DisplayPasskey
	QMetaObject::invokeMethod(parent(),
							  "DisplayPasskey",
							  Q_ARG(QDBusObjectPath, device),
							  Q_ARG(uint, passkey),
							  Q_ARG(ushort, entered));
}

void PairingAgentAdaptor::DisplayPinCode(const QDBusObjectPath& device, const QString& pincode)
{
	// handle method call org.bluez.Agent1.DisplayPinCode
	QMetaObject::invokeMethod(parent(), "DisplayPinCode", Q_ARG(QDBusObjectPath, device), Q_ARG(QString, pincode));
}

void PairingAgentAdaptor::Release()
{
	// handle method call org.bluez.Agent1.Release
	QMetaObject::invokeMethod(parent(), "Release");
}

void PairingAgentAdaptor::RequestAuthorization(const QDBusObjectPath& device)
{
	// handle method call org.bluez.Agent1.RequestAuthorization
	QMetaObject::invokeMethod(parent(), "RequestAuthorization", Q_ARG(QDBusObjectPath, device));
}

void PairingAgentAdaptor::RequestConfirmation(const QDBusObjectPath& device, uint passkey)
{
	// handle method call org.bluez.Agent1.RequestConfirmation
	QMetaObject::invokeMethod(parent(),
							  "RequestConfirmation",
							  Q_ARG(QDBusObjectPath, device),
							  Q_ARG(uint, passkey));
}

uint PairingAgentAdaptor::RequestPasskey(const QDBusObjectPath& device)
{
	// handle method call org.bluez.Agent1.RequestPasskey
	uint passkey;
	QMetaObject::invokeMethod(parent(),
							  "RequestPasskey",
							  Q_RETURN_ARG(uint, passkey),
							  Q_ARG(QDBusObjectPath, device));
	return passkey;
}

QString PairingAgentAdaptor::RequestPinCode(const QDBusObjectPath& device)
{
	// handle method call org.bluez.Agent1.RequestPinCode
	QString pincode;
	QMetaObject::invokeMethod(parent(),
							  "RequestPinCode",
							  Q_RETURN_ARG(QString, pincode),
							  Q_ARG(QDBusObjectPath, device));
	return pincode;
}
}
